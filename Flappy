import pygame, sys, random
pygame.init()
def create_pipe():
    random_pipe_pos = random.choice(pipe_high)
    bottom_pipe = pipe_surface.get_rect(midtop = (432, random_pipe_pos))
    top_pipe = top_pipe_surface.get_rect(midbottom = (432, random_pipe_pos- 200))
    return bottom_pipe, top_pipe
def move_pipe(pipes):
    for pipe in pipes:
        pipe.centerx -= 2.5
    return pipes
def draw_pipe(pipes):
    for pipe in pipes:
        if pipe.bottom >= 768:
            screen.blit(pipe_surface, pipe)
        else:
            screen.blit(top_pipe_surface, pipe)
def collision(pipes):
    for pipe in pipes:
        if bird_rect.colliderect(pipe):
            HIT.play()
            return False
    if bird_rect.top <= 0 or bird_rect.bottom >= 700:
        HIT.play()
        return False
    return True
def bird_rotate(bird):
    new_bird = pygame.transform.rotozoom(bird, -bird_move*3, 1)
    return new_bird
def anime_bird():
    new_bird = bird_list[bird_index]
    new_bird_rect = new_bird.get_rect(center= (100, bird_rect.centery))
    return new_bird, new_bird_rect
def score_dis(gamestate):
    global score , hscore
    #for pipe in pipes:
    #    if pipe.centerx<= bird_rect.centerx >= pipe.right:
    #        score += 0.1
    if gamestate == 'rungame':
        score_dis = font.render(f'{score}', False, WHITE)
        screen.blit(score_dis, (200, 20))
    elif gamestate == 'gameover':
        score_dis = font.render(f'Score: {score}', False, WHITE)
        screen.blit(score_dis, (116, 20))
        hscore_dis = font.render(f'High Score: {hscore}', False, (255, 255, 0))
        screen.blit(hscore_dis, (70, 600))
def scoreup(score, hscore):
    if score > hscore:
        hscore = score
background = pygame.transform.scale(pygame.image.load('assets/background-day.png'), (432, 768))
#ground:
ground = pygame.transform.scale(pygame.image.load('assets/base.png'), (504 , 768))
ground_x = 0
ground_move = -1
#game over:
gameover_surface = pygame.transform.scale2x(pygame.image.load('assets/gameover.png'))
gameover_rect = gameover_surface.get_rect(center= (216, 300))
#welcome:
welcome_surface = pygame.transform.scale2x(pygame.image.load('assets/message.png'))
welcome_rect = welcome_surface.get_rect(center= (216, 300))
welcome = True
#BGM:
BGM = pygame.mixer.Sound('sound/sfx_swooshing.wav')
HIT = pygame.mixer.Sound('sound/sfx_hit.wav')
DIE = pygame.mixer.Sound('sound/sfx_die.wav')
WING = pygame.mixer.Sound('sound/sfx_wing.wav')
POINT = pygame.mixer.Sound('sound/sfx_point.wav')
#bird:
bird1 = pygame.transform.scale(pygame.image.load('assets/bluebird-downflap.png'), (50, 36))
bird2 = pygame.transform.scale(pygame.image.load('assets/bluebird-midflap.png'), (50, 36))
bird3 = pygame.transform.scale(pygame.image.load('assets/bluebird-upflap.png'), (50, 36))
bird_list= [bird1, bird2, bird3]
bird_index = 0
bird = bird_list[bird_index]
bird_rect = bird.get_rect(center= (100 ,350))
BIRDFLAP = pygame.USEREVENT + 1
pygame.time.set_timer(BIRDFLAP, 200)
#pipe:
pipe_surface = pygame.transform.scale(pygame.image.load('assets/pipe-green.png'), (70, 525))

top_pipe_surface = pygame.transform.flip(pipe_surface, False, True)

pipe_list = []
pipe_high = [300, 350, 400, 450, 550]
SPAWNPIPE = pygame.USEREVENT
pygame.time.set_timer(SPAWNPIPE, 2400)
#Variables:
gravity = 0.5
bird_move = 0
game_active = False
SCORECO = pygame.USEREVENT + 2
#pygame.time.set_timer(SCORECO, 3600)
score = 0
hscore = 0
font = pygame.font.Font('font/04B_19.TTF', 40)
#Main:
WHITE = (255, 255, 255)
width, high = 432, 768
screen = pygame.display.set_mode((width, high))
clock = pygame.time.Clock()
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()
        if event.type == pygame.KEYDOWN:
            welcome = False

            if event.key == pygame.K_SPACE:
                bird_move = 0
                bird_move -= 11
                WING.play()
            if event.key == pygame.K_SPACE and game_active == False or (welcome == False and game_active == False):
                game_active = True
                bird_rect.center = (100, 350)
                pipe_list.clear()
                pygame.time.set_timer(SCORECO, 3200)
                score = 0
        if event.type == SPAWNPIPE:
            pipe_list.extend(create_pipe())
            print(pipe_list[-1])
        if event.type == SCORECO:
            score += 1
            POINT.play()
        if event.type == BIRDFLAP:
            bird_index += 1
            if bird_index >= 3:
                bird_index = 0
    screen.fill(WHITE)
    screen.blit(background, (0, 0))
    screen.blit(ground, (ground_x, 700))
    screen.blit(ground, (ground_x + 432, 700))
    ground_x += ground_move
    #scoreup(score, hscore)
    if score > hscore:
        hscore = score
    if ground_x <= -432:
        ground_x = 0
    if welcome:
        screen.blit(welcome_surface, welcome_rect)
    if game_active == True and welcome == False:
        bird_surface, bird_rect = anime_bird()
        rotated_bird = bird_rotate(bird_surface)
        screen.blit(rotated_bird, bird_rect)
        bird_move += gravity
        bird_rect.centery += bird_move
    #draw pipe
        pipe_list = move_pipe(pipe_list)
        draw_pipe(pipe_list)
        game_active = collision(pipe_list)
        score_dis('rungame')
    elif game_active == False and welcome == False:
        screen.blit(gameover_surface, gameover_rect)
        score_dis('gameover')
        pygame.time.set_timer(SCORECO, 0)
        DIE.play()
    pygame.display.flip()
    clock.tick(70)
